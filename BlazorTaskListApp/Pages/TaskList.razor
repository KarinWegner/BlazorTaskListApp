@page "/ViewTasks"
@using BlazorTaskListApp.Service
@using static BlazorTaskListApp.Service.GlobalStateTasks
@inject GlobalStateTasks GlobalStateTasks


<h3>Task overview</h3>
<div class="container">
    <div class="row">
        <div class="col-6 offset-3, taskHolder">

        @foreach(Assignment assignment in taskList)
        {
                <div class="card m-3">
                    <div class="card-header, d-inline-flex">
                        <div class="flex-grow-1">
                            <h3 class="ms-3">@assignment.Title</h3>
                   </div>
                   <div class="pe-2">
                       Id: @assignment.Id
                   </div>
                </div>
                @if (assignment.Description != null)
                {
                    <div class="card-body, pt-2, ps-3">
                        <text class="fs-5">@assignment.Description</text>
                    </div>
                }
                <div class="row, text-decoration-underline, card-footer">
                    <a @onclick="(()=>DeleteTask(assignment.Id))" class="fs-6, float-end">Delete task</a>
                </div>
                
            </div>
        }
        </div>
    </div>
</div>

@code {
    private IEnumerable<Assignment> taskList => GlobalStateTasks.TaskList;

    protected override void OnInitialized()
    {
        GlobalStateTasks.OnChange += StateHasChanged;
    }
    private void DeleteTask(int id)
    {
        GlobalStateTasks.RemoveTask(id);
    }

    public void Dispose()
    {

        GlobalStateTasks.OnChange -= StateHasChanged;
    }

}
